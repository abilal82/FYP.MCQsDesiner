@model MCQsDesigner.Web.Models.ViewModel.CoursesViewModel
@{
    ViewBag.Title = "SubCategory";


    Layout = "~/Views/Shared/_MainDashLayout.cshtml";

}

<div id="page-wrapper">
    <h2><i class="glyphicon glyphicon-edit"></i> Manage Courses</h2>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class=""><a href="#course-list" data-toggle="tab">Courses List</a></li>
                <li><a href="#add-course" data-toggle="tab">Add Course</a></li>
            </ul>
            <div class="tab-content">

                <div class="tab-pane  active " id="course-list">
                    <table id="tbl-course" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Program</th>
                                <th>Course</th>
                                <th>Code</th>
                                <th>Credit Hr</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>

                    </table>
                </div>
                <!-- #List -->
                <!-- #Add-->
                <div class="tab-pane box-body " id="add-course">
                 @using (Html.BeginForm("AddCourse", "Course", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "course-form" }))
                 {


                    <div class="row">
                        <!--category field-->
                        <div class="col-md-6">
                            <div class="form-group">
                              @Html.LabelFor(x => x.Courses.DegreeProgram.CategoryId, new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.DropDownListFor(x => x.Courses.DegreeProgram.CategoryId, new SelectList(Model.Categories, "Id", "Title"), "Select Category", new { @class = "form-control", @id = "category-Id" })
                                </div>

                             
                            </div>



                        </div>

                        <!--degree program field-->
                        <div class="col-md-6">

                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.DegreeProgram.ProgramTitle, new { @class = "control-label col-md-4" })

                                
                                <div class="col-md-5">
                                    @Html.DropDownListFor(x => x.Courses.DegreeProgram.Id,
                                                      new SelectList(Model.DegreePrograms, "Id", "ProgramTitle"), "--Select Category--",
                                                      new { @class = "form-control", @id = "degree-Id" })
                                </div>
                              
                              

                            </div>


                        </div>

                        <!--course field-->
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.CourseTitle, new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(x => x.Courses.CourseTitle, new { @class = "form-control", @id = "Course-title" })
                                </div>

                              
                              
                            </div>

                        </div>
                        <!--Course code field-->
                        <div class="col-md-6">
                        
                         
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.CourseCode, new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(x => x.Courses.CourseCode, new { @class = "form-control" })
                                </div>

                            </div>


                        </div>
                        <!-- credit hour Field-->
                        <div class="col-md-6">
                            
                          
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.CreditHour, new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    
                                        @Html.TextBoxFor(x => x.Courses.CreditHour, new { @class = "form-control" })
                                       
                                </div>

                            </div>


                        </div>


                       


                      
                    </div>
                    <!--Row end-->

                    <div class="form-group">
                        <div class="col-md-offset-5 col-md-7">
                            <button type="submit" class="btn btn-primary" id="btn-form">  Save  </button>
                        </div>
                    </div>




                 }
                <!-- /#ion-icons -->
            </div>
            <!-- /.tab-content -->
        </div>
        <!-- /.nav-tabs-custom -->
    </div>
    <!-- /.col -->
</div>


</div>



@section scripts {

    <script>

       
       
        $(document).ready(function () {

            $("#category-Id").change(function () {
                $("#degree-Id").empty();
                var val = $(this).val();
                $.ajax({

                    url: "/api/CourseService/GetProgramsList/" + val,
                    success: function (result) {
                        $.each(result, function (index, row) {

                            $("#degree-Id").append("<option value='" + row.id + "'>" + row.programTitle + "</option>")
                        })
                    }

                });
            });


            var table = $("#tbl-course").DataTable({
                ajax: {
                    url: "/api/CourseService/GetCourseDetail",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "id"
                    },
                    {
                        data: "degreeProgram.programTitle"
                    },
                    {
                        data: "courseTitle"
                    },
                    {
                        data: "courseCode"
                    },
                    {
                        data: "creditHour"
                    },
                    {
                        data: "id",
                        render: function (data, Type, Row) {
                            return "<a href='#'><span data-course-id='" + data + "' class='glyphicon glyphicon-trash js-delete'></span>  </a>";
                        }
                    }

                ]

            });

            $("#tbl-course").on("click", ".js-delete", function () {

                var btn = $(this);

                bootbox.confirm("Are you sure you want to delete this ?", function (result) {

                    if (result) {
                        $.ajax({
                            url: "/api/courseService/DeleteCourse/" + btn.attr("data-course-id"),
                            method: 'DELETE',
                            success: function () {
                                table.row(btn.parents("tr").remove()).remove().draw();
                            }



                        }).done(function () {
                            toastr.success("Successfully Deleted ");

                        })
                    }

                })





            });
        });



    

    </script>

}

