@model MCQsDesigner.Web.Models.ViewModel.CoursesViewModel
@{
    ViewBag.Title = "SubCategory";


        Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
   

}

<div id="page-wrapper">
    <h2><i class="glyphicon glyphicon-edit"></i> Manage Courses</h2>
</div>



<div class="well-sm">

    <div class="panel">
        <div class="panel-header-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#sub-list" data-toggle="tab"><i class="fa fa-navicon"></i><strong>  Courses List</strong></a></li>
                <li><a href="#addsubcategory" data-toggle="tab"><i class="fa fa-plus"></i><strong> Course</strong></a></li>
            </ul>
        </div>

        <div class="panel-body">
            <div class="tab-content">
                <div id="sub-list" class="tab-pane fade in active">
                    <table id="coursetbl" class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Program</th>
                                <th>Course</th>
                                <th>Code</th>
                                <th>Credit Hr</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div id="addsubcategory" class="tab-pane fade">
                    @using (Html.BeginForm("AddCourse", "Course", FormMethod.Post, new { @class = "form", role = "form",@id="Course-form" }))
                    {
                        <div class="col-xs-3">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.DegreeProgram.CategoryId, new { @class = "control-label" })
                                @Html.DropDownListFor(x => x.Courses.DegreeProgram.CategoryId,new SelectList(Model.Categories,"Id","Title"),"Select Category", new { @class = "form-control", @id = "category-Id" })
                                          
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.DegreeProgram.Id, new { @class = "control-label" })
                                @Html.DropDownListFor(x => x.Courses.DegreeProgram.Id,
                                                        new SelectList(Model.DegreePrograms,"Id", "ProgramTitle"), "--Select Category--",
                                                        new { @class = "form-control", @id="degree-Id"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.CourseTitle, new { @class = "control-label" })
                                @Html.TextBoxFor(x => x.Courses.CourseTitle, new { @class = "form-control",@id="Course-title"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.CourseCode,new { @class="control-label"})
                                @Html.TextBoxFor(x=> x.Courses.CourseCode,new { @class="form-control"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Courses.CreditHour, new { @class = "control-label" })
                                @Html.TextBoxFor(x => x.Courses.CreditHour, new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-primary" id="btn-form">Add</button>
                            </div>
                        </div>


                    }


                </div>
            </div>
        </div>
    </div>
</div>



@section scripts {

    <script>

       
       
        $(document).ready(function () {

            $("#category-Id").change(function () {
                $("#degree-Id").empty();
                var val = $(this).val();
                $.ajax({

                    url: "/api/Course/GetProgramsList/" + val,
                    success: function (result) {
                        $.each(result, function (index, row) {

                            $("#degree-Id").append("<option value='" + row.id + "'>" + row.programTitle + "</option>")
                        })
                    }

                });
            });


            var table = $("#coursetbl").DataTable({
                ajax: {
                    url: "/api/Course/GetCourseDetail",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "id"
                    },
                    {
                        data: "degreeProgram.programTitle"
                    },
                    {
                        data: "courseTitle"
                    },
                    {
                        data: "courseCode"
                    },
                    {
                        data: "creditHour"
                    },
                    {
                        data: "id",
                        render: function (data, Type, Row) {
                            return "<a href='#'><span data-course-id='" + data + "' class='glyphicon glyphicon-trash js-delete'></span>  </a>";
                        }
                    }

                ]

            });

            $("#coursetbl").on("click", ".js-delete", function () {

                var btn = $(this);

                bootbox.confirm("Are you sure you want to delete this ?", function (result) {

                    if (result) {
                        $.ajax({
                            url: "/api/course/DeleteCourse/" + btn.attr("data-course-id"),
                            method: 'DELETE',
                            success: function () {
                                table.row(btn.parents("tr").remove()).remove().draw();
                            }



                        }).done(function () {
                            toastr.success("Successfully Deleted ");

                        })
                    }

                })





            });
        });



    

    </script>

}

